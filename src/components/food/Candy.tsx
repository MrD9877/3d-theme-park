/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t -o src/components/food/Candy.tsx public/models/candy/model.gltf 
*/

import * as THREE from "three";
import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { animated, SpringValue } from "@react-spring/three";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder086: THREE.Mesh;
    Cylinder086_1: THREE.Mesh;
  };
  materials: {
    ["Orange.001"]: THREE.MeshStandardMaterial;
    ["Black.004"]: THREE.MeshStandardMaterial;
  };
};

export function Candy(props: JSX.IntrinsicElements["group"] & { opacity: SpringValue<number> }) {
  const { nodes, materials } = useGLTF("/models/candy/model.gltf") as unknown as GLTFResult;
  return (
    <animated.group {...props} dispose={null}>
      <mesh geometry={nodes.Cylinder086.geometry}>
        <animated.meshStandardMaterial attach="material" transparent opacity={props.opacity} color={(materials["Orange.001"] as THREE.MeshStandardMaterial).color} metalness={(materials["Orange.001"] as THREE.MeshStandardMaterial).metalness} roughness={(materials["Orange.001"] as THREE.MeshStandardMaterial).roughness} />
      </mesh>
      <mesh geometry={nodes.Cylinder086_1.geometry}>
        <animated.meshStandardMaterial attach="material" transparent opacity={props.opacity} color={(materials["Black.004"] as THREE.MeshStandardMaterial).color} metalness={(materials["Black.004"] as THREE.MeshStandardMaterial).metalness} roughness={(materials["Black.004"] as THREE.MeshStandardMaterial).roughness} />
      </mesh>
    </animated.group>
  );
}

useGLTF.preload("/models/candy/model.gltf");
