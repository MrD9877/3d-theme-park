/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t -o src/components/park/Bear.tsx public/models/bear/model.gltf 
*/

import * as THREE from "three";
import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { animated } from "@react-spring/three";

type GLTFResult = GLTF & {
  nodes: {
    character_bear: THREE.Mesh;
    character_bearArmLeft: THREE.Mesh;
    character_bearArmRight: THREE.Mesh;
    Cube1337: THREE.Mesh;
    Cube1337_1: THREE.Mesh;
  };
  materials: {
    ["BrownDark.036"]: THREE.MeshStandardMaterial;
    ["Black.025"]: THREE.MeshStandardMaterial;
  };
};

export function Bear(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/bear/model.gltf") as unknown as GLTFResult;
  return (
    <animated.group {...props} dispose={null}>
      <mesh position-y={0.1} geometry={nodes.character_bear.geometry} material={materials["BrownDark.036"]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.character_bearArmLeft.geometry} material={materials["BrownDark.036"]} position={[0.204, 0, -0.634]} />
        <mesh geometry={nodes.character_bearArmRight.geometry} material={materials["BrownDark.036"]} position={[-0.204, 0, -0.634]} />
        <group position={[0, 0, -0.704]}>
          <mesh geometry={nodes.Cube1337.geometry} material={materials["Black.025"]} />
          <mesh geometry={nodes.Cube1337_1.geometry} material={materials["BrownDark.036"]} />
        </group>
      </mesh>
    </animated.group>
  );
}

useGLTF.preload("models/bear/model.gltf");
