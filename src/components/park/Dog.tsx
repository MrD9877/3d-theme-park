/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t -o src/components/park/dog.tsx public/models/dog/model.gltf 
*/

import * as THREE from "three";
import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { animated } from "@react-spring/three";

type GLTFResult = GLTF & {
  nodes: {
    character_dog: THREE.Mesh;
    character_dogArmLeft: THREE.Mesh;
    character_dogArmRight: THREE.Mesh;
    Cube1339: THREE.Mesh;
    Cube1339_1: THREE.Mesh;
    Cube1339_2: THREE.Mesh;
  };
  materials: {
    ["Beige.017"]: THREE.MeshStandardMaterial;
    ["Red.034"]: THREE.MeshStandardMaterial;
    ["Black.026"]: THREE.MeshStandardMaterial;
  };
};

export function Dog(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/dog/model.gltf") as unknown as GLTFResult;
  return (
    <animated.group {...props} dispose={null}>
      <mesh position-y={0.1} geometry={nodes.character_dog.geometry} material={materials["Beige.017"]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.character_dogArmLeft.geometry} material={materials["Beige.017"]} position={[0.204, 0, -0.634]} />
        <mesh geometry={nodes.character_dogArmRight.geometry} material={materials["Beige.017"]} position={[-0.204, 0, -0.634]} />
        <group position={[0, 0, -0.704]}>
          <mesh geometry={nodes.Cube1339.geometry} material={materials["Beige.017"]} />
          <mesh geometry={nodes.Cube1339_1.geometry} material={materials["Red.034"]} />
          <mesh geometry={nodes.Cube1339_2.geometry} material={materials["Black.026"]} />
        </group>
      </mesh>
    </animated.group>
  );
}

useGLTF.preload("/models/dog/model.gltf");
