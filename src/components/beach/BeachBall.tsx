/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t public/models/beach-ball/model.gltf 
*/

import * as THREE from "three";
import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { animated } from "@react-spring/three";

type GLTFResult = GLTF & {
  nodes: {
    Sphere000: THREE.Mesh;
    Sphere000_1: THREE.Mesh;
    Sphere000_2: THREE.Mesh;
    Sphere000_3: THREE.Mesh;
  };
  materials: {
    ["White.008"]: THREE.MeshStandardMaterial;
    ["Blue.004"]: THREE.MeshStandardMaterial;
    ["Red.003"]: THREE.MeshStandardMaterial;
    ["Yellow.012"]: THREE.MeshStandardMaterial;
  };
};

export function BeachBall(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/beach-ball/model.gltf") as unknown as GLTFResult;
  return (
    <animated.group {...props} dispose={null}>
      <mesh geometry={nodes.Sphere000.geometry} material={materials["White.008"]} />
      <mesh geometry={nodes.Sphere000_1.geometry} material={materials["Blue.004"]} />
      <mesh geometry={nodes.Sphere000_2.geometry} material={materials["Red.003"]} />
      <mesh geometry={nodes.Sphere000_3.geometry} material={materials["Yellow.012"]} />
    </animated.group>
  );
}

useGLTF.preload("/models/beach-ball/model.gltf");
